<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="boot-service.log-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="statementExecutableSqlLogEnable" value="true"/>
        <property name="statementCreateAfterLogEnabled" value="false"/>
        <property name="statementPrepareAfterLogEnabled" value="false"/>
        <property name="statementPrepareCallAfterLogEnabled" value="false"/>
        <property name="statementExecuteAfterLogEnabled" value="false"/>
        <property name="statementExecuteQueryAfterLogEnabled" value="false"/>
        <property name="statementExecuteUpdateAfterLogEnabled" value="false"/>
        <property name="statementExecuteBatchAfterLogEnabled" value="false"/>
        <property name="statementCloseAfterLogEnabled" value="false"/>
        <property name="statementParameterSetLogEnabled" value="false"/>
    </bean>

    <bean id="boot-service.stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="1000"/>
        <property name="logSlowSql" value="true"/>
    </bean>

    <bean id="boot-service.dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${boot-service.dataSource.url:databaseurl}"/>
        <property name="username" value="${boot-service.dataSource.username:yourusername}"/>
        <property name="password" value="${boot-service.dataSource.password:yourpassword}"/>
        <property name="initialSize" value="${boot-service.dataSource.initialSize:1}"/>
        <property name="minIdle" value="${boot-service.dataSource.minIdle:1}"/>
        <property name="maxActive" value="${boot-service.dataSource.maxActive:300}"/>
        <property name="timeBetweenEvictionRunsMillis"
                  value="${boot-service.dataSource.timeBetweenEvictionRunsMillis:5000}"/>
        <property name="minEvictableIdleTimeMillis"
                  value="${boot-service.dataSource.minEvictableIdleTimeMillis:30000}"/>
        <property name="validationQuery" value="${boot-service.dataSource.validationQuery:SELECT 1}"/>
        <property name="testOnBorrow" value="${boot-service.dataSource.testOnBorrow:true}"/>
        <property name="testOnReturn" value="${boot-service.dataSource.testOnReturn:false}"/>
        <property name="testWhileIdle" value="${boot-service.dataSource.testWhileIdle:true}"/>
        <property name="logAbandoned" value="${boot-service.dataSource.logAbandoned:true}"/>
        <property name="removeAbandoned" value="${boot-service.dataSource.removeAbandoned:true}"/>
        <property name="removeAbandonedTimeout"
                  value="${boot-service.dataSource.removeAbandonedTimeout:180}"/>
        <property name="proxyFilters">
            <list>
                <ref bean="boot-service.log-filter"/>
                <ref bean="boot-service.stat-filter"/>
            </list>
        </property>
    </bean>

    <bean id="boot-service.jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="boot-service.dataSource"/>
    </bean>

    <bean id="boot-service.txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="boot-service.dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="boot-service.txManager"/>

</beans>